{
	"name": "BronzeSilver",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RegionSilver",
						"type": "DatasetReference"
					},
					"name": "BronzeRegion"
				},
				{
					"dataset": {
						"referenceName": "ProductSilver",
						"type": "DatasetReference"
					},
					"name": "BronzeProduct"
				},
				{
					"dataset": {
						"referenceName": "SalesSilver",
						"type": "DatasetReference"
					},
					"name": "BronzeSales"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "Medallion",
						"type": "LinkedServiceReference"
					},
					"name": "SaveSilverRegion"
				},
				{
					"linkedService": {
						"referenceName": "Medallion",
						"type": "LinkedServiceReference"
					},
					"name": "SaveSilverProduct"
				},
				{
					"linkedService": {
						"referenceName": "Medallion",
						"type": "LinkedServiceReference"
					},
					"name": "SaveSilverSales"
				}
			],
			"transformations": [
				{
					"name": "SelectRegion",
					"description": "Select Columns"
				},
				{
					"name": "selectProduct",
					"description": "Select Columns"
				},
				{
					"name": "TransformationProduct",
					"description": "Tranformation"
				},
				{
					"name": "selectSales",
					"description": "Select Columns"
				},
				{
					"name": "TransformationSales",
					"description": "Tranformation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesTerritoryKey as string,",
				"          Region as string,",
				"          Country as string,",
				"          Group as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> BronzeRegion",
				"source(output(",
				"          ProductKey as string,",
				"          Product as string,",
				"          {Standard Cost} as string,",
				"          Color as string,",
				"          Subcategory as string,",
				"          Category as string,",
				"          {Background Color Format} as string,",
				"          {Font Color Format} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BronzeProduct",
				"source(output(",
				"          SalesOrderNumber as string,",
				"          OrderDate as string,",
				"          ProductKey as string,",
				"          ResellerKey as string,",
				"          EmployeeKey as string,",
				"          SalesTerritoryKey as string,",
				"          Quantity as string,",
				"          {Unit Price} as string,",
				"          Sales as string,",
				"          Cost as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BronzeSales",
				"BronzeRegion select(mapColumn(",
				"          SalesTerritoryKey,",
				"          Region,",
				"          Country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRegion",
				"BronzeProduct select(mapColumn(",
				"          ProductKey,",
				"          Product,",
				"          StandardCost = {Standard Cost},",
				"          Color,",
				"          Subcategory,",
				"          Category",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectProduct",
				"selectProduct derive(StandardCost = substring(StandardCost,2,20),",
				"          Product = split(Product,',')[1]) ~> TransformationProduct",
				"BronzeSales select(mapColumn(",
				"          ProductKey,",
				"          SalesTerritoryKey,",
				"          Quantity,",
				"          UnitPrice = {Unit Price},",
				"          Sales,",
				"          Cost,",
				"          OrderDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectSales",
				"selectSales derive(Year = split(OrderDate, ', ')[3],",
				"          Month = split(split(OrderDate, ', ')[2],\" \")[1],",
				"          UnitPrice = substring(UnitPrice, 2, 20),",
				"          Sales = substring(Sales, 2, 20),",
				"          Cost = substring(Cost, 2, 20)) ~> TransformationSales",
				"SelectRegion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'medallion',",
				"     folderPath: 'Silver/Region',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> SaveSilverRegion",
				"TransformationProduct sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'medallion',",
				"     folderPath: 'Silver/Product',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SaveSilverProduct",
				"TransformationSales sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'medallion',",
				"     folderPath: 'Silver/Sales',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          SalesTerritoryKey",
				"     )) ~> SaveSilverSales"
			]
		}
	}
}