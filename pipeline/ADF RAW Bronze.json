{
	"name": "ADF RAW Bronze",
	"properties": {
		"activities": [
			{
				"name": "Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ListZone",
						"type": "DatasetReference",
						"parameters": {
							"folderName": "rawdata"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "EachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Metadata').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "File",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "fileZone",
									"type": "DatasetReference",
									"parameters": {
										"folderName": "rawdata",
										"fileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified",
									"itemName"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SQLZone",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"parameters": [
											{
												"name": "fileName",
												"type": "String",
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "Query",
										"text": "select * from dbo.ControlTable where CSV=@fileName"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"state": "Inactive",
							"onInactiveMarkAs": "Failed",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(\n    equals(activity('Script1').output.resultSetCount, 0), \n    and(\n        equals(activity('Script1').output.resultSetCount, 1), \n        greater(\n        activity('Script1').output.resultSets[0].rows.Modified,\n        activity('Script1').output.resultSets[0].rows.Refreshed        \n        )\n    )\n)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1_copy1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Script2_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "fileZone",
												"type": "DatasetReference",
												"parameters": {
													"folderName": "rawdata",
													"fileName": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "medallion",
												"type": "DatasetReference",
												"parameters": {
													"folderName": "medallion",
													"layerName": "Bronze",
													"tableName": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Script2_copy1",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "SQLZone",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "fileName",
															"type": "String",
															"value": {
																"value": "@item().name",
																"type": "Expression"
															},
															"direction": "Input"
														},
														{
															"name": "lastModified",
															"type": "Datetime",
															"value": {
																"value": "@activity('File').output.lastModified",
																"type": "Expression"
															},
															"direction": "Input"
														},
														{
															"name": "datetime",
															"type": "Datetime",
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"direction": "Input"
														}
													],
													"type": "NonQuery",
													"text": "INSERT INTO dbo.ControlTAble VALUES (@fileName, @lastModified, @datetime, 'N')"
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									}
								]
							}
						},
						{
							"name": "Fail1",
							"type": "Fail",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "We are not able to read table",
								"errorCode": "500"
							}
						},
						{
							"name": "Switch1",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Script1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@if(\n    equals(activity('Script1').output.resultSetCount, 0), \n    0, \n    if(\n        and(\n        equals(activity('Script1').output.resultSetCount, 1), \n        greater(\n        activity('File').output.lastModified,\n        activity('Script1').output.resultSets[0].rows[0].Refreshed        \n        )), 1, -1)\n    )\n\n\n\n",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "0",
										"activities": [
											{
												"name": "Copy data1_copy1_copy1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Script2_copy1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "fileZone",
														"type": "DatasetReference",
														"parameters": {
															"folderName": "rawdata",
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "medallion",
														"type": "DatasetReference",
														"parameters": {
															"folderName": "medallion",
															"layerName": "Bronze",
															"tableName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Script2_copy1_copy1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "SQLZone",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "fileName",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "lastModified",
																	"type": "Datetime",
																	"value": {
																		"value": "@activity('File').output.lastModified",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "datetime",
																	"type": "Datetime",
																	"value": {
																		"value": "@utcnow()",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "NonQuery",
															"text": "INSERT INTO dbo.ControlTAble VALUES (@fileName, @lastModified, @datetime, 'N')"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									},
									{
										"value": "1",
										"activities": [
											{
												"name": "Copy data1_copy1_copy1_copy1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Script2_copy1_copy1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "fileZone",
														"type": "DatasetReference",
														"parameters": {
															"folderName": "rawdata",
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "medallion",
														"type": "DatasetReference",
														"parameters": {
															"folderName": "medallion",
															"layerName": "Bronze",
															"tableName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Script2_copy1_copy1_copy1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "SQLZone",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "fileName",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "lastModified",
																	"type": "Datetime",
																	"value": {
																		"value": "@activity('File').output.lastModified",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "datetime",
																	"type": "Datetime",
																	"value": {
																		"value": "@utcnow()",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "NonQuery",
															"text": "UPDATE dbo.ControlTable\nSET \nModified=@lastModified,\nRefreshed=@datetime,\nProcessed='N'\nWhere CSV=@fileName"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Switch1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "debugOutput",
								"value": {
									"value": "@concat(item().name, ' - ' ,activity('File').output.lastModified)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable1_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Switch1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "debugOutput",
								"value": {
									"value": "@concat(item().name, ' - ' ,activity('File').output.lastModified)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"processedFileName": {
				"type": "Array"
			},
			"debugOutput": {
				"type": "String"
			}
		},
		"annotations": []
	}
}